#!/bin/bash

ic=(0 一 二 三 四 五 六 七 八 九 十)

#initial check for occupied workspaces
for num in $(hyprctl workspaces -j | jq '.[].id'); do 
  export o"$num"=occupied
done
 
#initial check for focused workspace
for num in $(hyprctl monitors -j | jq 'select(.[].focused==true)' | jq '.[].activeWorkspace.id'); do 
  export f"$num"=focused
  export fnum=f"$num"
  export mon=$(hyprctl monitors -j | jq '.[] | select(.activeWorkspace.id==1)' | jq -r '.name')
done

workspaces() {
if [[ ${1:0:9} == "workspace" ]] && [[ ${1:11} != "special" ]]; then #set focused workspace
  unset -v "$fnum" 
  num=${1:11}
  export f"$num"=focused
  export fnum=f"$num"

elif [[ ${1:0:10} == "focusedmon" ]]; then #set focused workspace following monitor focus change
  unset -v "$fnum"
  string=${1:12}
  num=${string##*,}
  export mon=${string/,*/}
  export f"$num"=focused
  export fnum=f"$num"

elif [[ ${1:0:13} == "moveworkspace" ]] && [[ ${1##*,} == "$mon" ]]; then #Set focused workspace following swapactiveworkspace
  unset -v "$fnum"
  string=${1:15}
  num=${string/,*/}
  export f"$num"=focused
  export fnum=f"$num"

elif [[ ${1:0:15} == "createworkspace" ]]; then #set Occupied workspace
  num=${1:17}
  export o"$num"=occupied
  export onum=o"$num"

elif [[ ${1:0:16} == "destroyworkspace" ]]; then #unset unoccupied workspace
  num=${1:18}
  unset -v o"$num"
fi
}
module() {
echo 	"(box	:class \"workspaces\"	:orientation \"h\" :spacing 12 :space-evenly false :valign \"baseline\" \
         (button :onclick \"hyprctl dispatch workspace 1\"  :class \"ws-btn $o1 $f1\"   \"${ic[1]}\"  ) \
         (button :onclick \"hyprctl dispatch workspace 2\"  :class \"ws-btn $o2 $f2\"   \"${ic[2]}\"  ) \
         (button :onclick \"hyprctl dispatch workspace 3\"  :class \"ws-btn $o3 $f3\"   \"${ic[3]}\"  ) \
         (button :onclick \"hyprctl dispatch workspace 4\"  :class \"ws-btn $o4 $f4\"   \"${ic[4]}\"  ) \
         (button :onclick \"hyprctl dispatch workspace 5\"  :class \"ws-btn $o5 $f5\"   \"${ic[5]}\"  ) \
         (button :onclick \"hyprctl dispatch workspace 6\"  :class \"ws-btn $o6 $f6\"   \"${ic[6]}\"  ) \
         (button :onclick \"hyprctl dispatch workspace 7\"  :class \"ws-btn $o7 $f7\"   \"${ic[7]}\"  ) \
         (button :onclick \"hyprctl dispatch workspace 8\"  :class \"ws-btn $o8 $f8\"   \"${ic[8]}\"  ) \
         (button :onclick \"hyprctl dispatch workspace 9\"  :class \"ws-btn $o9 $f9\"   \"${ic[9]}\"  ) \
         (button :onclick \"hyprctl dispatch workspace 10\" :class \"ws-btn $o10 $f10\" \"${ic[10]}\" ))"
}

module

socat -u UNIX-CONNECT:/tmp/hypr/"$HYPRLAND_INSTANCE_SIGNATURE"/.socket2.sock - | while read -r event; do 
workspaces "$event"
module
done

